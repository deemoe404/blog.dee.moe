<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>deemoe&#39;s journal</title>
  
  <subtitle>眼见何事，情系何处，身在何方，心思何人</subtitle>
  <link href="https://dee.moe/atom.xml" rel="self"/>
  
  <link href="https://dee.moe/"/>
  <updated>2024-02-23T18:06:46.133Z</updated>
  <id>https://dee.moe/</id>
  
  <author>
    <name>deemoe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>What XR Should Be in 2023</title>
    <link href="https://dee.moe/2023/06/13/Essay/what-xr-should-be-in-2023/"/>
    <id>https://dee.moe/2023/06/13/Essay/what-xr-should-be-in-2023/</id>
    <published>2023-06-13T07:27:35.000Z</published>
    <updated>2024-02-23T18:06:46.133Z</updated>
    
    <content type="html"><![CDATA[<p>XR is being brought to the public again after Apple announced their new XR headset, Apple Vision Pro. However, Apple is hesitant about this product as, during WWDC, no one other than those featured in the promotion video was seen wearing it. The reason is obvious: using a computer that covers your face in front of a camera is weird (not to mention that it is way bigger than some other XR “glasses”).</p><p><img src="/2023/06/13/Essay/what-xr-should-be-in-2023/comp.png" alt="headset-and-glasses" title="Headset and Glasses"></p><h2 id="Is-Vision-Pro-the-Answer"><a href="#Is-Vision-Pro-the-Answer" class="headerlink" title="Is Vision Pro the Answer?"></a>Is Vision Pro the Answer?</h2><p>Apple is currently making the most powerful mobile chip and personal software on the planet. No other company can build a knock-off Vision Pro because they don’t have the M2 chip or the Apple Software Team. However, the crucial question remains: is it becoming a good “XR” with these cutting-edge technologies?</p><p>While the Vision Pro may have the most powerful system to passthrough the reality to you, it still has its limitations. You need to be mindful of the power cable, maintain a stationary head position, and wearing it for several hours can lead to significant neck fatigue, preventing prolonged immersion in the XR world.</p><blockquote><p>I’m not saying Vision Pro is bad. To be frank, they are creating one of the best “headsets” available right now. It’s great for entertainment purposes and can be used as a <strong>gigantic monitor</strong> or for “<strong>Spatial Computing</strong>“.</p></blockquote><h2 id="The-Two-“R”s"><a href="#The-Two-“R”s" class="headerlink" title="The Two “R”s"></a>The Two “R”s</h2><p>There are two categories of “R”s out there. One aims to provide extra content in your vision (XR), while the other is more like a “display” rather than something entirely new (VR). Microsoft Hololens focuses on the first category, HTC Vivw falls into the second category, while Apple is attempting to combine both aspects simultaneously.</p><p><img src="/2023/06/13/Essay/what-xr-should-be-in-2023/xr-vr.png" alt="xr-and-vr" title="XR and VR"></p><p>This article will only be discussing the second category since “VR” is already quite good at utilizing desktop graphics. Since “XR” refers to “Extended Reality”, what kinds of extra information it can add to our reality?</p><h2 id="What-“Extra”-Content-do-We-Needs"><a href="#What-“Extra”-Content-do-We-Needs" class="headerlink" title="What “Extra” Content do We Needs?"></a>What “Extra” Content do We Needs?</h2><p>The Hololens and Vision Pro both mention a type of assistance that their devices can provide: 3D instruction in real life. However, what about the moments when you want to sit down, relax, and contemplate your real-life needs without the sci-fi scenes they present to you?</p><p>Hololens is designed for military and industrial usage, but Apple? Really? </p><p><img src="/2023/06/13/Essay/what-xr-should-be-in-2023/sci-fi.png" alt="sci-fi" title="sci-fi"></p><p>For most people, something that we really do in everyday life is more like:</p><ol><li>Checking the map while traveling</li><li>Receiving guidance during yoga sessions</li><li>Tracking calories intake throughout the day</li><li>Asking for help when cooking</li></ol><p>…</p><p>None of these tasks could NOT be done without visual instructions, right?</p><h2 id="The-XR-“Earphone”"><a href="#The-XR-“Earphone”" class="headerlink" title="The XR “Earphone”"></a>The XR “Earphone”</h2><p>The term “XR” doesn’t imply that it has to be a monitor strapped to your face. Why can’t it be something more wearable and adorable, like earphones, or even with a built-in camera?</p><p>AI these days is quite different from back in the days when HTC Vive was launched. AI from Facebook can perform image segmentation on objects it has never seen before, while ChatGPT can seamlessly handle NLP and network searches just like human dose. We are now in a new era where computers can understand the world like never before.</p><p>You might anticipate what I am about to say, right? <em>(merely a bluetooth earbuds with a “secretary” built inside 🤣)</em></p><p>The “XR earphone” is definitely not my original, and companies like Apple are unlikely to prioritize it since it may seem too trivial compared to the Vision Pro, which offers <strong>much more capabilities</strong> than a mere earphone.</p><blockquote><p>But integrating it with Siri could be interesting.</p></blockquote><p>However, I still believe that such a concept is highly useful and <strong>feasible</strong> in 2023.</p><h2 id="What’s-More"><a href="#What’s-More" class="headerlink" title="What’s More"></a>What’s More</h2><p>The inconvenience of XR headsets primarily stems from having to wear a bulky device. However, if the “XR content” is primarily audio-based, why couldn’t one simply fill their house with soundbars and cameras?</p><blockquote><p>“Okay, the microwave oven is set to 15min, over medium heat, and? What’s next?”</p><p>“Prepear the sauce.”</p><p>“Hmmm, sauce… where is the sauce…”</p><p>“It’s on your left hand side, next to the Apple.”</p></blockquote><h2 id="But…"><a href="#But…" class="headerlink" title="But…"></a>But…</h2><p>Yes, there is a lot more that needs to be discussed, such as privacy concerns.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;XR is being brought to the public again after Apple announced their new XR headset, Apple Vision Pro. However, Apple is hesitant about th</summary>
      
    
    
    
    <category term="Essay" scheme="https://dee.moe/categories/Essay/"/>
    
    
    <category term="XR" scheme="https://dee.moe/tags/XR/"/>
    
    <category term="AI" scheme="https://dee.moe/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>Folder Content Copy Script with Filter Option</title>
    <link href="https://dee.moe/2022/06/23/Technology/folder-content-copy-script-with-filter-option/"/>
    <id>https://dee.moe/2022/06/23/Technology/folder-content-copy-script-with-filter-option/</id>
    <published>2022-06-23T21:11:21.000Z</published>
    <updated>2024-02-23T18:06:46.153Z</updated>
    
    <content type="html"><![CDATA[<p>This script is designed to copy the contents of a folder, including sub-folders, to a new destination path. The user is prompted to enter the source path, the destination path, and a filter word to exclude certain files based on their names.</p><pre><code class="CMD">@echo offecho This script copy everything inside a folder to a new path, containing sub-folders.echo.set /p target_path="Enter path containing all files: "set /p distin_path="Enter new path for re-grouped files: "set /p filter_word="Exclud file name containing certain string (leave empty for none): "set vcffile=*.*C:cd %target_path%if defined filter_word (    for /f "delims=" %%s in ('dir /b/a-d/s "%target_path%"\"%vcffile%"') do (        echo Copying %%~ns to %distin_path%...        echo %%s | findstr %filter_word% &gt;nul &amp;&amp; (            copy /y "%%s" %distin_path% &gt; null        )    )) else (    for /f "delims=" %%s in ('dir /b/a-d/s "%target_path%"\"%vcffile%"') do (        echo Copying %%~ns to %distin_path%...        copy /y "%%s" %distin_path% &gt; null    ))echo.echo All file(s) copied.pause</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;This script is designed to copy the contents of a folder, including sub-folders, to a new destination path. The user is prompted to enter</summary>
      
    
    
    
    <category term="Technology" scheme="https://dee.moe/categories/Technology/"/>
    
    
    <category term="Windows" scheme="https://dee.moe/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Localhost Issue in WSL2</title>
    <link href="https://dee.moe/2021/10/15/Technology/localhost-issue-in-wsl2/"/>
    <id>https://dee.moe/2021/10/15/Technology/localhost-issue-in-wsl2/</id>
    <published>2021-10-15T23:36:10.000Z</published>
    <updated>2024-02-23T18:06:46.153Z</updated>
    
    <content type="html"><![CDATA[<p>I was attempting to build a remote debugger for an embedded device when I had no access to a physical device. As a solution, I decided to try using Docker (with the WSL2 backend).</p><p>In the project’s design, the 9090 UDP port was supposed to be used for communication between the host and the slave. However, it appeared that using ‘localhost’ or ‘127.0.0.1’ didn’t work within the Docker container.</p><p>After hours of searching and experimentation, I finally confirmed that the issue was due to WSL 2, rather than Docker itself. To access the ‘localhost’ of the Docker host, which in this case refers to WSL, you need to run the following command in PowerShell with administrator privileges.</p><pre><code class="powershell">wsl -e ip -4 addr show dev eth0</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;I was attempting to build a remote debugger for an embedded device when I had no access to a physical device. As a solution, I decided to</summary>
      
    
    
    
    <category term="Technology" scheme="https://dee.moe/categories/Technology/"/>
    
    
    <category term="Windows" scheme="https://dee.moe/tags/Windows/"/>
    
    <category term="WSL" scheme="https://dee.moe/tags/WSL/"/>
    
  </entry>
  
  <entry>
    <title>Fix Un-allowed DMA capable bus/device(s) detected</title>
    <link href="https://dee.moe/2021/10/09/Technology/fix-un-allowed-dma-capable-bus-devices-detected/"/>
    <id>https://dee.moe/2021/10/09/Technology/fix-un-allowed-dma-capable-bus-devices-detected/</id>
    <published>2021-10-09T14:41:55.000Z</published>
    <updated>2024-02-23T18:06:46.153Z</updated>
    
    <content type="html"><![CDATA[<p>Windows 8 and later have a function named “Device Encryption”. It allows Windows to automatically enable BitLocker for local disks and unlock them at startup.</p><p>However, if you are using a DIY rig or have changed/added some hardware to your OEM machine, this feature might be broken. Therefore, we need to add those devices to the whitelist to re-enable the feature.</p><hr><h2 id="Whitelist-the-devices"><a href="#Whitelist-the-devices" class="headerlink" title="Whitelist the devices"></a>Whitelist the devices</h2><blockquote><p>Check for driver updates in Windows Update before doing this, because even though devices without a proper driver won’t show up in the device list, the system could detect their device ID that might not be listed in the whitelist.</p></blockquote><ol><li>Open <strong>_Reged_it</strong></li><li>Navigate to <strong><em>Computer\HKEY_LOCAL_MACHINE\SYSTEM\<br>CurrentControlSet\Control\DmaSecurity\AllowedBuses</em></strong></li><li>Grant yourself access to modify the registry key<ol><li>Right-click&nbsp;<em><strong>AllowedBuses</strong></em>&nbsp;and go to <strong><em>Permissions</em></strong></li><li>Make yourself the owner<ol><li>Press&nbsp;<em><strong>Advanced</strong></em></li><li>Next to&nbsp;<em><strong>Owner</strong></em>, make note of what it says (mine said&nbsp;<em><strong>SYSTEM</strong></em>)</li><li>Next to&nbsp;<em><strong>Owner</strong></em>, press&nbsp;<em><strong>Change</strong></em></li><li>Enter your username (eg your Microsoft account email address)</li><li>Press&nbsp;<em><strong>OK</strong></em></li></ol></li><li>Grant yourself access<ol><li>Press&nbsp;<em><strong>Add</strong></em></li><li>Enter your username (eg your Microsoft account email address)</li><li>Press&nbsp;<em><strong>OK</strong></em></li><li>Select your user</li><li>Tick&nbsp;<em><strong>Full Control</strong></em></li><li>Press&nbsp;<em><strong>OK</strong></em></li></ol></li></ol></li><li>Under&nbsp;<em><strong>AllowedBuses</strong></em>, create a new&nbsp;<em><strong>String Value</strong></em></li><li>Run the following PS script which generates a .reg file (with all found PCI devices) in tmp directory and then imports it silently</li></ol><pre><code class="powershell">$tmpfile = "$($env:TEMP)\AllowBuses.reg"'Windows Registry Editor Version 5.00[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\DmaSecurity\AllowedBuses]'`| Out-File $tmpfile(Get-PnPDevice -InstanceId PCI* `| Format-Table -Property FriendlyName,InstanceId -HideTableHeaders -AutoSize `| Out-String -Width 300).trim() `-split "`r`n" `-replace '&amp;SUBSYS.*', '' `-replace '\s+PCI\\', '"="PCI\\' `| Foreach-Object{ "{0}{1}{2}" -f '"',$_,'"' } `| Out-File $tmpfile -Appendregedit /s $tmpfile</code></pre><p>Restart your computer and enjoy the device encryption feature!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Windows 8 and later have a function named “Device Encryption”. It allows Windows to automatically enable BitLocker for local disks and un</summary>
      
    
    
    
    <category term="Technology" scheme="https://dee.moe/categories/Technology/"/>
    
    
    <category term="Windows" scheme="https://dee.moe/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Compile Latest OpenCV on Ubuntu</title>
    <link href="https://dee.moe/2020/04/07/Technology/compile-latest-opencv-on-ubuntu/"/>
    <id>https://dee.moe/2020/04/07/Technology/compile-latest-opencv-on-ubuntu/</id>
    <published>2020-04-07T12:50:00.000Z</published>
    <updated>2024-02-23T18:06:46.153Z</updated>
    
    <content type="html"><![CDATA[<p>Compiling OpenCV can vary depending on the platform. In this demonstration, I will be using Ubuntu. However, these steps are mostly the same for any other distribution, with the only differences being the package manager and the package names.</p><h2 id="Retrieve-OpenCV-source-code"><a href="#Retrieve-OpenCV-source-code" class="headerlink" title="Retrieve OpenCV source code"></a>Retrieve OpenCV source code</h2><p>This shell command retrieve the most recent OpenCV version number from the GitHub API and store it in a shell variable for future use.</p><pre><code class="bash">vernum=$(wget -qO- -t1 -T2 "https://api.github.com/repos/opencv/opencv/releases/latest"  grep "tag_name"  head -n 1  awk -F ":" '{print $2}'  sed 's/\"//g;s/,//g;s/ //g;s/v//g')</code></pre><p>Next, download and unzip the OpenCV source code from GitHub. To avoid cluttering the working directory, it’s recommended to create a new folder specifically for the compilation process.</p><pre><code class="bash">mkdir opencv_build &amp;&amp; cd opencv_build</code></pre><pre><code class="bash">wget https://github.com/opencv/opencv/archive/refs/tags/$vernum.zipunzip $vernum.zip &amp;&amp; rm $vernum.zipwget https://github.com/opencv/opencv_contrib/archive/refs/tags/$vernum.zipunzip $vernum.zip &amp;&amp; rm $vernum.zipcd opencv-$vernum</code></pre><h2 id="Install-dependencies"><a href="#Install-dependencies" class="headerlink" title="Install dependencies"></a>Install dependencies</h2><p>Before proceeding, make sure to update your system.</p><pre><code class="bash">sudo apt update &amp;&amp; sudo apt upgrade</code></pre><p>The commands for installing the following packages include libraries that are commonly used with OpenCV, such as <strong>v4l</strong>, <strong>FFMPEG</strong>, and <strong>x264</strong>, but do not include GPU acceleration or machine learning components.</p><pre><code class="bash">sudo add-apt-repository "deb http://security.ubuntu.com/ubuntu xenial-security main"sudo apt install -y build-essential cmake git unzip zip\                pkg-config libavcodec-dev libavformat-dev libswscale-dev \                libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev \                libsnappy-dev libboost-all-dev libjasper-dev libdc1394-22-dev\                python3-dev python3-numpy python3-pip ffmpeg libopenblas-dev \                tesseract-ocr libtesseract-dev libprotobuf-dev libleveldb-dev \                libhdf5-serial-dev protobuf-compiler libatlas-base-dev \                libgflags-dev libgoogle-glog-dev liblmdb-dev libfaac-dev \                gfortran libgstreamer1.0-dev libatlas-base-dev libxvidcore-dev \                libpng-dev libopenexr-dev libwebp-dev \                libmp3lame-dev libtheora-dev libvorbis-dev  \                libopencore-amrwb-dev x264 v4l-utils libgdk-pixbuf2.0-dev \                manpages-dev libopencore-amrnb-dev \                libgstreamer-plugins-base1.0-dev libavresample-dev pip3 install --upgrade pipapt-get install -f</code></pre><h2 id="Configure-CMake-project"><a href="#Configure-CMake-project" class="headerlink" title="Configure CMake project"></a>Configure CMake project</h2><p>Remenber to execute all the build commands within a temporary directory. This way, if you make a mistake, you can easily delete the entire temporary folder to quickly start over.</p><pre><code class="bash">mkdir build &amp;&amp; cd build</code></pre><p>To display a list of all CMake compile options, run the following command:</p><pre><code class="bash">cmake .. -LAH</code></pre><ul><li>L List cached variables.</li><li>A Show options&nbsp;<a href="https://cmake.org/cmake/help/v3.0/command/mark_as_advanced.html">marked as advanced</a>.</li><li>H Show more helpful information about each option.</li></ul><p>Here’s an example configure command that you can use. If you’ve successfully installed the dependencies according to the previous instructions, this example cmake command should work for you.</p><pre><code class="bash">cmake -D CMAKE_BUILD_TYPE=RELEASE \        -D CMAKE_INSTALL_PREFIX=/usr/local/ \        -D OPENCV_ENABLE_NONFREE=ON \        -D OPENCV_EXTRA_MODULES_PATH=~/opencv_build/opencv_contrib-$vernum/modules \        -D OPENCV_GENERATE_PKGCONFIG=YES \        -D WITH_QT=OFF \        -D WITH_OPENGL=OFF \        -D WITH_CUDA=OFF \        -D BUILD_EXAMPLES=ON \        -D INSTALL_PYTHON_EXAMPLES=ON \        -D INSTALL_C_EXAMPLES=ON ..</code></pre><p>If you find it overwhelming to deal with extensive text in the command line and have a GUI installed on your machine, consider trying tools like <strong><code>ccmake</code></strong> and <strong>cmake-gui</strong> for a more user-friendly experience.</p><blockquote><p>You can also check an existed OpenCV build what compile flags are used by a function built into OpenCV. In C++ it looks like this:</p><pre><code class="C++">cv::getBuildInformation()</code></pre><p>In Python:</p><pre><code class="Python">cv2.getBuildInformation()</code></pre></blockquote><h2 id="Compile"><a href="#Compile" class="headerlink" title="Compile"></a>Compile</h2><p>We’ve completed the necessary steps, and now it’s in the hands of your CPUs. The <strong>-j</strong> flag specifies how many threads will be used for compilation, and it should not exceed the number of CPU cores you have.</p><pre><code class="bash">make -j6</code></pre><p>If the compilation process proceeds without errors, you can proceed with the installation by simply running this single line of code:</p><pre><code class="bash">make install</code></pre><p>At this point, CMake should be able to detect the OpenCV library files.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Compiling OpenCV can vary depending on the platform. In this demonstration, I will be using Ubuntu. However, these steps are mostly the s</summary>
      
    
    
    
    <category term="Technology" scheme="https://dee.moe/categories/Technology/"/>
    
    
    <category term="Ubuntu" scheme="https://dee.moe/tags/Ubuntu/"/>
    
    <category term="OpenCV" scheme="https://dee.moe/tags/OpenCV/"/>
    
  </entry>
  
</feed>
